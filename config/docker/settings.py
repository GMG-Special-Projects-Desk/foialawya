"""
Django settings for foialawya project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7358fa37123a3b923794ce7ca301a30b5ba7d8a4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

USE_ALLAUTH = os.environ.get("USE_ALLAUTH", False)
ALLOWABLE_LOGIN_DOMAIN = "example.com" # if you're using Google Oauth, set this to limit the domain from which people can log in. This is probably set in your OAuth settings, but the purpose of this is to send an in-app reminder to use the right domain Gmail, not your peronsal Gmail..


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'foias.apps.FoiasConfig',
    'django.contrib.postgres',
]

# I turned this off in Docker-compose land because it's too complicated to set up.
if USE_ALLAUTH:
    INSTALLED_APPS += [
        'allauth',
        'allauth.account',
        'allauth.socialaccount',
        'allauth.socialaccount.providers.google',
    ]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware'
]
if USE_ALLAUTH:
    MIDDLEWARE_CLASSES += ['django.contrib.auth.middleware.SessionAuthenticationMiddleware']
MIDDLEWARE_CLASSES += ['django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join('foias', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.docker.app.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.environ.get('DB_HOST', 'psql'),
        'NAME': os.environ.get('DB_NAME', 'foialawya'),
        'USER': os.environ.get('DB_USER', 'foialawya'),
        'PASSWORD': os.environ.get('DB_PASSWORD', ''),            
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

if USE_ALLAUTH:
    ACCOUNT_USERNAME_REQUIRED = False
    ACCOUNT_EMAIL_VERIFICATION = "none"
    SOCIALACCOUNT_ADAPTER = 'app.account_adapter.SocialAccountAdapter'
    SOCIALACCOUNT_QUERY_EMAIL = True

    LOGIN_URL = "/foias/accounts/google/login/"
    LOGIN_REDIRECT_URL = "/"
    ADMIN_LOGIN_REDIRECT_URL = '/'

    AUTHENTICATION_BACKENDS = (
        "allauth.account.auth_backends.AuthenticationBackend",
        'django.contrib.auth.backends.ModelBackend',
    )
    AUTHENTICATION_BACKENDS = (
        'django.contrib.auth.backends.ModelBackend',
    )


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True
SITE_ID = os.environ.get("SITE_ID", 1)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/usr/src/app/public' # this is where collectstatic puts the files, I think.

DEFAULT_FROM_EMAIL = 'foias@example.com'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
